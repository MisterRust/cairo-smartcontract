%lang starknet

from starkware.cairo.common.cairo_builtins import HashBuiltin
from starkware.starknet.common.syscalls import get_block_timestamp
from starkware.cairo.common.bool import TRUE
from starkware.cairo.common.math import unsigned_div_rem, abs_value, sqrt
from starkware.cairo.common.pow import pow
from starkware.cairo.common.math_cmp import is_nn, is_le
from contracts.map.biomes import get_temperature
from contracts.map.world import world, Plot

# To learn more about Eykar resources and extraction see our wiki: (insert link)

func extract{range_check_ptr}(
    dt : felt,
    q : felt,
    max_q,
    affine_growth,
    linear_growth,
    extraction_speed,
    affine_extraction,
    linear_extraction,
) -> (extracted : felt):
    # Compute resources to extract and update plot content
    #
    # Parameters:
    #   dt: Î”t, the delay in seconds since last extraction
    #   q: the previously remaining quantity
    #   max_q: the maximum quantity that this plot can hold
    #   affine_growth: to grow quantity in percentages/s, float
    #   linear_growth: to grow quantity in absolute amount/s, float
    #   extraction_speed: the speed of extraction (usually, the amount of humans), float
    #   affine_extraction: the absolute quantity extracted per speed, float
    #   linear_extraction: the quantity extracted in percentage of quantity, float
    # Returns:
    #   extracted: extracted amound

    

    ret
end
